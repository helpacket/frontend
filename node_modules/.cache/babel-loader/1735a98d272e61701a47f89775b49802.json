{"remainingRequest":"/home/oscar/dockerized-vue/my-app/node_modules/babel-loader/lib/index.js!/home/oscar/dockerized-vue/my-app/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanels.js","dependencies":[{"path":"/home/oscar/dockerized-vue/my-app/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanels.js","mtime":1575107093807},{"path":"/home/oscar/dockerized-vue/my-app/node_modules/cache-loader/dist/cjs.js","mtime":1575107102282},{"path":"/home/oscar/dockerized-vue/my-app/node_modules/babel-loader/lib/index.js","mtime":1575107093850}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9ob21lL29zY2FyL2RvY2tlcml6ZWQtdnVlL215LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMy9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgovLyBTdHlsZXMKaW1wb3J0ICIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9WRXhwYW5zaW9uUGFuZWwvVkV4cGFuc2lvblBhbmVsLnNhc3MiOyAvLyBDb21wb25lbnRzCgppbXBvcnQgeyBCYXNlSXRlbUdyb3VwIH0gZnJvbSAiLi4vVkl0ZW1Hcm91cC9WSXRlbUdyb3VwIjsgLy8gVXRpbGl0aWVzCgppbXBvcnQgeyBicmVha2luZyB9IGZyb20gIi4uLy4uL3V0aWwvY29uc29sZSI7Ci8qIEB2dWUvY29tcG9uZW50ICovCgpleHBvcnQgZGVmYXVsdCBCYXNlSXRlbUdyb3VwLmV4dGVuZCh7CiAgbmFtZTogJ3YtZXhwYW5zaW9uLXBhbmVscycsCiAgcHJvdmlkZTogZnVuY3Rpb24gcHJvdmlkZSgpIHsKICAgIHJldHVybiB7CiAgICAgIGV4cGFuc2lvblBhbmVsczogdGhpcwogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICBhY2NvcmRpb246IEJvb2xlYW4sCiAgICBkaXNhYmxlZDogQm9vbGVhbiwKICAgIGZvY3VzYWJsZTogQm9vbGVhbiwKICAgIGluc2V0OiBCb29sZWFuLAogICAgcG9wb3V0OiBCb29sZWFuLAogICAgcmVhZG9ubHk6IEJvb2xlYW4KICB9LAogIGNvbXB1dGVkOiB7CiAgICBjbGFzc2VzOiBmdW5jdGlvbiBjbGFzc2VzKCkgewogICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgQmFzZUl0ZW1Hcm91cC5vcHRpb25zLmNvbXB1dGVkLmNsYXNzZXMuY2FsbCh0aGlzKSwgewogICAgICAgICd2LWV4cGFuc2lvbi1wYW5lbHMnOiB0cnVlLAogICAgICAgICd2LWV4cGFuc2lvbi1wYW5lbHMtLWFjY29yZGlvbic6IHRoaXMuYWNjb3JkaW9uLAogICAgICAgICd2LWV4cGFuc2lvbi1wYW5lbHMtLWZvY3VzYWJsZSc6IHRoaXMuZm9jdXNhYmxlLAogICAgICAgICd2LWV4cGFuc2lvbi1wYW5lbHMtLWluc2V0JzogdGhpcy5pbnNldCwKICAgICAgICAndi1leHBhbnNpb24tcGFuZWxzLS1wb3BvdXQnOiB0aGlzLnBvcG91dAogICAgICB9KTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqLwogICAgaWYgKHRoaXMuJGF0dHJzLmhhc093blByb3BlcnR5KCdleHBhbmQnKSkgewogICAgICBicmVha2luZygnZXhwYW5kJywgJ211bHRpcGxlJywgdGhpcyk7CiAgICB9CiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqLwoKCiAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLnZhbHVlKSAmJiB0aGlzLnZhbHVlLmxlbmd0aCA+IDAgJiYgdHlwZW9mIHRoaXMudmFsdWVbMF0gPT09ICdib29sZWFuJykgewogICAgICBicmVha2luZygnOnZhbHVlPSJbdHJ1ZSwgZmFsc2UsIHRydWVdIicsICc6dmFsdWU9IlswLCAyXSInLCB0aGlzKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZUl0ZW06IGZ1bmN0aW9uIHVwZGF0ZUl0ZW0oaXRlbSwgaW5kZXgpIHsKICAgICAgdmFyIHZhbHVlID0gdGhpcy5nZXRWYWx1ZShpdGVtLCBpbmRleCk7CiAgICAgIHZhciBuZXh0VmFsdWUgPSB0aGlzLmdldFZhbHVlKGl0ZW0sIGluZGV4ICsgMSk7CiAgICAgIGl0ZW0uaXNBY3RpdmUgPSB0aGlzLnRvZ2dsZU1ldGhvZCh2YWx1ZSk7CiAgICAgIGl0ZW0ubmV4dElzQWN0aXZlID0gdGhpcy50b2dnbGVNZXRob2QobmV4dFZhbHVlKTsKICAgIH0KICB9Cn0pOw=="},{"version":3,"sources":["../../../src/components/VExpansionPanel/VExpansionPanels.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;AACA,sE,CAEA;;AACA,SAAA,aAAA,mC,CAGA;;AACA,SAAA,QAAA;AAKA;;AACA,eAAe,aAAa,CAAb,MAAA,CAAqB;AAClC,EAAA,IAAI,EAD8B,oBAAA;AAGlC,EAAA,OAHkC,qBAG3B;AACL,WAAO;AACL,MAAA,eAAe,EAAE;AADZ,KAAP;AAJgC,GAAA;AASlC,EAAA,KAAK,EAAE;AACL,IAAA,SAAS,EADJ,OAAA;AAEL,IAAA,QAAQ,EAFH,OAAA;AAGL,IAAA,SAAS,EAHJ,OAAA;AAIL,IAAA,KAAK,EAJA,OAAA;AAKL,IAAA,MAAM,EALD,OAAA;AAML,IAAA,QAAQ,EAAE;AANL,GAT2B;AAkBlC,EAAA,QAAQ,EAAE;AACR,IAAA,OADQ,qBACD;AACL,+BACK,aAAa,CAAb,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,IAAA,CADE,IACF,CADL;AAEE,8BAFK,IAAP;AAGE,yCAAiC,KAH5B,SAAP;AAIE,yCAAiC,KAJ5B,SAAP;AAKE,qCAA6B,KALxB,KAAP;AAME,sCAA8B,KAAK;AANrC;AAQD;AAVO,GAlBwB;AA+BlC,EAAA,OA/BkC,qBA+B3B;AACL;AACA,QAAI,KAAA,MAAA,CAAA,cAAA,CAAJ,QAAI,CAAJ,EAA0C;AACxC,MAAA,QAAQ,CAAA,QAAA,EAAA,UAAA,EAAR,IAAQ,CAAR;AACD;AAED;;;AACA,QACE,KAAK,CAAL,OAAA,CAAc,KAAd,KAAA,KACA,KAAA,KAAA,CAAA,MAAA,GADA,CAAA,IAEA,OAAO,KAAA,KAAA,CAAP,CAAO,CAAP,KAHF,SAAA,EAIE;AACA,MAAA,QAAQ,CAAA,8BAAA,EAAA,iBAAA,EAAR,IAAQ,CAAR;AACD;AA5C+B,GAAA;AA+ClC,EAAA,OAAO,EAAE;AACP,IAAA,UADO,sBACG,IADH,EACG,KADH,EACqE;AAC1E,UAAM,KAAK,GAAG,KAAA,QAAA,CAAA,IAAA,EAAd,KAAc,CAAd;AACA,UAAM,SAAS,GAAG,KAAA,QAAA,CAAA,IAAA,EAAoB,KAAK,GAA3C,CAAkB,CAAlB;AAEA,MAAA,IAAI,CAAJ,QAAA,GAAgB,KAAA,YAAA,CAAhB,KAAgB,CAAhB;AACA,MAAA,IAAI,CAAJ,YAAA,GAAoB,KAAA,YAAA,CAApB,SAAoB,CAApB;AACD;AAPM;AA/CyB,CAArB,CAAf","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n"],"sourceRoot":""}]}