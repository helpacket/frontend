{"remainingRequest":"/home/oscar/dockerized-vue/my-app/node_modules/babel-loader/lib/index.js!/home/oscar/dockerized-vue/my-app/node_modules/vuetify/lib/components/VSkeletonLoader/VSkeletonLoader.js","dependencies":[{"path":"/home/oscar/dockerized-vue/my-app/node_modules/vuetify/lib/components/VSkeletonLoader/VSkeletonLoader.js","mtime":1575107093807},{"path":"/home/oscar/dockerized-vue/my-app/node_modules/cache-loader/dist/cjs.js","mtime":1575107102282},{"path":"/home/oscar/dockerized-vue/my-app/node_modules/babel-loader/lib/index.js","mtime":1575107093850}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../src/components/VSkeletonLoader/VSkeletonLoader.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VSkeletonLoader.sass'\n\n// Mixins\nimport Elevatable from '../../mixins/elevatable'\nimport Measurable from '../../mixins/measurable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\nimport { getSlot } from '../../util/helpers'\n\n/* @vue/component */\nexport default mixins(\n  Elevatable,\n  Measurable,\n  Themeable,\n).extend({\n  name: 'VSkeletonLoader',\n\n  props: {\n    boilerplate: Boolean,\n    loading: Boolean,\n    tile: Boolean,\n    transition: String,\n    type: String,\n    types: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n\n  computed: {\n    attrs (): object {\n      if (!this.isLoading) return this.$attrs\n\n      return !this.boilerplate ? {\n        'aria-busy': true,\n        'aria-live': 'polite',\n        role: 'alert',\n        ...this.$attrs,\n      } : {}\n    },\n    classes (): object {\n      return {\n        'v-skeleton-loader--boilerplate': this.boilerplate,\n        'v-skeleton-loader--is-loading': this.isLoading,\n        'v-skeleton-loader--tile': this.tile,\n        ...this.themeClasses,\n        ...this.elevationClasses,\n      }\n    },\n    isLoading (): boolean {\n      return Boolean(\n        !getSlot(this) ||\n        this.loading\n      )\n    },\n    rootTypes (): Record<string, string> {\n      return {\n        actions: 'button@2',\n        article: 'heading, paragraph',\n        avatar: 'avatar',\n        button: 'button',\n        card: 'image, card-heading',\n        'card-avatar': 'image, list-item-avatar',\n        'card-heading': 'heading',\n        chip: 'chip',\n        'date-picker': 'list-item, card-heading, divider, date-picker-options, date-picker-days, actions',\n        'date-picker-options': 'text, avatar@2',\n        'date-picker-days': 'avatar@28',\n        heading: 'heading',\n        image: 'image',\n        'list-item': 'text',\n        'list-item-avatar': 'avatar, text',\n        'list-item-two-line': 'sentences',\n        'list-item-avatar-two-line': 'avatar, sentences',\n        'list-item-three-line': 'paragraph',\n        'list-item-avatar-three-line': 'avatar, paragraph',\n        paragraph: 'text@3',\n        sentences: 'text@2',\n        table: 'table-heading, table-thead, table-tbody, table-tfoot',\n        'table-heading': 'heading, text',\n        'table-thead': 'heading@6',\n        'table-tbody': 'table-row-divider@6',\n        'table-row-divider': 'table-row, divider',\n        'table-row': 'table-cell@6',\n        'table-cell': 'text',\n        'table-tfoot': 'text@2, avatar@2',\n        text: 'text',\n        ...this.types,\n      }\n    },\n  },\n\n  methods: {\n    genBone (text: string, children: VNode[]) {\n      return this.$createElement('div', {\n        staticClass: `v-skeleton-loader__${text} v-skeleton-loader__bone`,\n      }, children)\n    },\n    genBones (bone: string): VNode[] {\n      // e.g. 'text@3'\n      const [type, length] = bone.split('@') as [string, number]\n      const generator = () => this.genStructure(type)\n\n      // Generate a length array based upon\n      // value after @ in the bone string\n      return Array.from({ length }).map(generator)\n    },\n    // Fix type when this is merged\n    // https://github.com/microsoft/TypeScript/pull/33050\n    genStructure (type?: string): any {\n      let children = []\n      type = type || this.type || ''\n      const bone = this.rootTypes[type] || ''\n\n      // End of recursion, do nothing\n      /* eslint-disable-next-line no-empty, brace-style */\n      if (type === bone) {}\n      // Array of values - e.g. 'heading, paragraph, text@2'\n      else if (type.indexOf(',') > -1) return this.mapBones(type)\n      // Array of values - e.g. 'paragraph@4'\n      else if (type.indexOf('@') > -1) return this.genBones(type)\n      // Array of values - e.g. 'card@2'\n      else if (bone.indexOf(',') > -1) children = this.mapBones(bone)\n      // Array of values - e.g. 'list-item@2'\n      else if (bone.indexOf('@') > -1) children = this.genBones(bone)\n      // Single value - e.g. 'card-heading'\n      else if (bone) children.push(this.genStructure(bone))\n\n      return [this.genBone(type, children)]\n    },\n    genSkeleton () {\n      const children = []\n      const slot = getSlot(this)\n\n      if (!this.isLoading) children.push(slot)\n      else children.push(this.genStructure())\n\n      /* istanbul ignore else */\n      if (!this.transition) return children\n\n      /* istanbul ignore next */\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n        // Only show transition when\n        // content has been loaded\n        on: {\n          enter: (el: HTMLElement) => {\n            if (this.isLoading) el.style.transition = 'none'\n          },\n          beforeLeave: (el: HTMLElement) => {\n            el.style.display = 'none'\n          },\n        },\n      }, children)\n    },\n    mapBones (bones: string) {\n      // Remove spaces and return array of structures\n      return bones.replace(/\\s/g, '').split(',').map(this.genStructure)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-skeleton-loader',\n      attrs: this.attrs,\n      on: this.$listeners,\n      class: this.classes,\n      style: this.isLoading ? this.measurableStyles : undefined,\n    }, [this.genSkeleton()])\n  },\n})\n"],"sourceRoot":""}]}