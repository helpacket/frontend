{"remainingRequest":"/home/oscar/dockerized-vue/my-app/node_modules/babel-loader/lib/index.js!/home/oscar/dockerized-vue/my-app/node_modules/vuetify/lib/components/VRangeSlider/VRangeSlider.js","dependencies":[{"path":"/home/oscar/dockerized-vue/my-app/node_modules/vuetify/lib/components/VRangeSlider/VRangeSlider.js","mtime":1575107093807},{"path":"/home/oscar/dockerized-vue/my-app/node_modules/cache-loader/dist/cjs.js","mtime":1575107102282},{"path":"/home/oscar/dockerized-vue/my-app/node_modules/babel-loader/lib/index.js","mtime":1575107093850}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../src/components/VRangeSlider/VRangeSlider.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VRangeSlider.sass'\n\n// Components\nimport VSlider from '../VSlider'\n\n// Helpers\nimport {\n  createRange,\n  deepEqual,\n} from '../../util/helpers'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default VSlider.extend({\n  name: 'v-range-slider',\n\n  props: {\n    value: {\n      type: Array,\n      default: () => ([0, 0]),\n    } as PropValidator<number[]>,\n  },\n\n  data () {\n    return {\n      activeThumb: null as null | number,\n      lazyValue: this.value,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSlider.options.computed.classes.call(this),\n        'v-input--range-slider': true,\n      }\n    },\n    internalValue: {\n      get (): number[] {\n        return this.lazyValue\n      },\n      set (val: number[]) {\n        // Round value to ensure the\n        // entire slider range can\n        // be selected with step\n        let value = val.map(v => this.roundValue(Math.min(Math.max(v, this.minValue), this.maxValue)))\n\n        // Switch values if range and wrong order\n        if (value[0] > value[1] || value[1] < value[0]) {\n          if (this.activeThumb !== null) {\n            const toFocus = this.activeThumb === 1 ? 0 : 1\n            const el = this.$refs[`thumb_${toFocus}`] as HTMLElement\n            el.focus()\n          }\n          value = [value[1], value[0]]\n        }\n\n        this.lazyValue = value\n        if (!deepEqual(value, this.value)) this.$emit('input', value)\n\n        this.validate()\n      },\n    },\n    inputWidth (): number[] {\n      return this.internalValue.map((v: number) => (\n        this.roundValue(v) - this.minValue) / (this.maxValue - this.minValue) * 100\n      )\n    },\n    trackFillStyles (): Partial<CSSStyleDeclaration> {\n      const styles = VSlider.options.computed.trackFillStyles.call(this)\n      const fillPercent = Math.abs(this.inputWidth[0] - this.inputWidth[1])\n      const dir = this.vertical ? 'height' : 'width'\n      const start = this.vertical ? this.$vuetify.rtl ? 'top' : 'bottom' : this.$vuetify.rtl ? 'right' : 'left'\n\n      styles[dir] = `${fillPercent}%`\n      styles[start] = `${this.inputWidth[0]}%`\n\n      return styles\n    },\n  },\n\n  methods: {\n    getTrackStyle (startLength: number, endLength: number, startPadding = 0, endPadding = 0) {\n      const startDir = this.vertical ? this.$vuetify.rtl ? 'top' : 'bottom' : this.$vuetify.rtl ? 'right' : 'left'\n      const endDir = this.vertical ? 'height' : 'width'\n\n      const start = `calc(${startLength}% + ${startPadding}px)`\n      const end = `calc(${endLength}% + ${endPadding}px)`\n\n      return {\n        transition: this.trackTransition,\n        [startDir]: start,\n        [endDir]: end,\n      }\n    },\n    getIndexOfClosestValue (arr: number[], v: number) {\n      if (Math.abs(arr[0] - v) < Math.abs(arr[1] - v)) return 0\n      else return 1\n    },\n    genInput () {\n      return createRange(2).map(i => {\n        const input = VSlider.options.methods.genInput.call(this)\n\n        input.data = input.data || {}\n        input.data.attrs = input.data.attrs || {}\n        input.data.attrs.value = this.internalValue[i]\n\n        return input\n      })\n    },\n    genTrackContainer () {\n      const children = []\n\n      if (this.disabled) {\n        const disabledPadding = 10\n        const sections: [number, number, number, number][] = [\n          [0, this.inputWidth[0], 0, -disabledPadding],\n          [this.inputWidth[0], Math.abs(this.inputWidth[1] - this.inputWidth[0]), disabledPadding, disabledPadding * -2],\n          [this.inputWidth[1], Math.abs(100 - this.inputWidth[1]), disabledPadding, 0],\n        ]\n\n        if (this.$vuetify.rtl) sections.reverse()\n\n        children.push(...sections.map(section => this.$createElement('div', this.setBackgroundColor(this.computedTrackColor, {\n          staticClass: 'v-slider__track-background',\n          style: this.getTrackStyle(...section),\n        }))))\n      } else {\n        children.push(\n          this.$createElement('div', this.setBackgroundColor(this.computedTrackColor, {\n            staticClass: 'v-slider__track-background',\n            style: this.getTrackStyle(0, 100),\n          })),\n          this.$createElement('div', this.setBackgroundColor(this.computedColor, {\n            staticClass: 'v-slider__track-fill',\n            style: this.trackFillStyles,\n          }))\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-slider__track-container',\n        ref: 'track',\n      }, children)\n    },\n    genChildren () {\n      return [\n        this.genInput(),\n        this.genTrackContainer(),\n        this.genSteps(),\n        createRange(2).map(index => {\n          const value = this.internalValue[index]\n          const onDrag = (e: MouseEvent) => {\n            this.isActive = true\n            this.activeThumb = index\n            this.onThumbMouseDown(e)\n          }\n          const onFocus = (e: Event) => {\n            this.isFocused = true\n            this.activeThumb = index\n\n            this.$emit('focus', e)\n          }\n\n          const onBlur = (e: Event) => {\n            this.isFocused = false\n            this.activeThumb = null\n\n            this.$emit('blur', e)\n          }\n\n          const valueWidth = this.inputWidth[index]\n          const isActive = this.isActive && this.activeThumb === index\n          const isFocused = this.isFocused && this.activeThumb === index\n\n          return this.genThumbContainer(value, valueWidth, isActive, isFocused, onDrag, onFocus, onBlur, `thumb_${index}`)\n        }),\n      ]\n    },\n    onSliderClick (e: MouseEvent) {\n      if (!this.isActive) {\n        if (this.noClick) {\n          this.noClick = false\n          return\n        }\n\n        const { value, isInsideTrack } = this.parseMouseMove(e)\n\n        if (isInsideTrack) {\n          this.activeThumb = this.getIndexOfClosestValue(this.internalValue, value)\n          const refName = `thumb_${this.activeThumb}`\n          const thumbRef = this.$refs[refName] as HTMLElement\n          thumbRef.focus()\n        }\n\n        this.setInternalValue(value)\n\n        this.$emit('change', this.internalValue)\n      }\n    },\n    onMouseMove (e: MouseEvent) {\n      const { value, isInsideTrack } = this.parseMouseMove(e)\n\n      if (isInsideTrack && this.activeThumb === null) {\n        this.activeThumb = this.getIndexOfClosestValue(this.internalValue, value)\n      }\n\n      this.setInternalValue(value)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (this.activeThumb === null) return\n\n      const value = this.parseKeyDown(e, this.internalValue[this.activeThumb])\n\n      if (value == null) return\n\n      this.setInternalValue(value)\n      this.$emit('change', this.internalValue)\n    },\n    setInternalValue (value: number) {\n      this.internalValue = this.internalValue.map((v: number, i: number) => {\n        if (i === this.activeThumb) return value\n        else return Number(v)\n      })\n    },\n  },\n})\n"],"sourceRoot":""}]}