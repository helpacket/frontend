{"remainingRequest":"/home/oscar/dockerized-vue/my-app/node_modules/babel-loader/lib/index.js!/home/oscar/dockerized-vue/my-app/node_modules/vuetify/lib/services/theme/index.js","dependencies":[{"path":"/home/oscar/dockerized-vue/my-app/node_modules/vuetify/lib/services/theme/index.js","mtime":1575107093807},{"path":"/home/oscar/dockerized-vue/my-app/node_modules/cache-loader/dist/cjs.js","mtime":1575107102282},{"path":"/home/oscar/dockerized-vue/my-app/node_modules/babel-loader/lib/index.js","mtime":1575107093850}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../src/services/theme/index.ts"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA,SAAA,OAAA,qB,CAEA;;AACA,OAAO,KAAP,UAAA,gB,CAEA;;AACA,OAAA,GAAA,MAAA,KAAA;AAQA,WAAM,KAAN;AAAA;AAAA;AAAA;;AAsCE,mBAA0C;AAAA;;AAAA,QAA7B,OAA6B,uEAA1C,EAA0C;;AAAA;;AACxC;AApCK,UAAA,QAAA,GAAA,KAAA;AAMA,UAAA,MAAA,GAAwB;AAC7B,MAAA,KAAK,EAAE;AACL,QAAA,OAAO,EADF,SAAA;AAEL,QAAA,SAAS,EAFJ,SAAA;AAGL,QAAA,MAAM,EAHD,SAAA;AAIL,QAAA,KAAK,EAJA,SAAA;AAKL,QAAA,IAAI,EALC,SAAA;AAML,QAAA,OAAO,EANF,SAAA;AAOL,QAAA,OAAO,EAAE;AAPJ,OADsB;AAU7B,MAAA,IAAI,EAAE;AACJ,QAAA,OAAO,EADH,SAAA;AAEJ,QAAA,SAAS,EAFL,SAAA;AAGJ,QAAA,MAAM,EAHF,SAAA;AAIJ,QAAA,KAAK,EAJD,SAAA;AAKJ,QAAA,IAAI,EALA,SAAA;AAMJ,QAAA,OAAO,EANH,SAAA;AAOJ,QAAA,OAAO,EAAE;AAPL;AAVuB,KAAxB;AAqBA,UAAA,QAAA,GAA0B,MAA1B,MAAA;AAEC,UAAA,MAAA,GAAA,IAAA;AAEA,UAAA,WAAA,GAAA,IAAA;AAEA,UAAA,OAAA,GAAA,IAAA;;AAIN,QAAI,OAAO,CAAX,OAAA,EAAqB;AACnB,YAAA,QAAA,GAAA,IAAA;AAEA;AACD;;AAED,UAAA,OAAA,GAAe,OAAO,CAAtB,OAAA;AAEA,UAAA,IAAA,GAAY,OAAO,CAAC,OAAO,CAA3B,IAAmB,CAAnB;AACA,QAAM,MAAM,GAAG,OAAO,CAAP,MAAA,IAAf,EAAA;AAEA,UAAA,MAAA,GAAc;AACZ,MAAA,IAAI,EAAE,MAAA,WAAA,CAAiB,MAAM,CAAvB,IAAA,EADM,IACN,CADM;AAEZ,MAAA,KAAK,EAAE,MAAA,WAAA,CAAiB,MAAM,CAAvB,KAAA,EAAA,KAAA;AAFK,KAAd;AAbwC;AAtCV,GAAlC,CAyDE;AACA;;;AA1DF;AAAA;AAkFE;AACA;AAnFF,iCAoFmB;AACf,UAAI,KAAJ,QAAA,EAAmB,OAAO,KAAP,QAAO,EAAP;AAEnB,WAAA,GAAA,GAAW,KAAX,eAAA;AACD;AAxFH;AAAA;AAAA,+BA0FiB;AACb,WAAA,GAAA,GAAA,EAAA;AA3F8B,KAAlC,CA8FE;AACA;AACA;;AAhGF;AAAA;AAAA,yBAiGa,IAjGb,EAiGa,UAjGb,EAiG0C;AACtC,UAAI,KAAJ,QAAA,EAAmB;AAEnB;;AACA,UAAK,IAAY,CAAjB,KAAA,EAAyB;AACvB,aAAA,WAAA,CAAA,IAAA;AADF,OAAA,MAEO,IAAA,UAAA,EAAgB;AACrB,aAAA,OAAA,CAAA,UAAA;AACD;;AAED,WAAA,SAAA;AA3G8B,KAAlC,CA8GE;;AA9GF;AAAA;AAAA,6BA+GiB,KA/GjB,EA+GiB,KA/GjB,EA+GyD;AACrD,WAAA,MAAA,CAAA,KAAA,IAAqB,MAAM,CAAN,MAAA,CAAc,KAAA,MAAA,CAAd,KAAc,CAAd,EAArB,KAAqB,CAArB;AACA,WAAA,UAAA;AAjH8B,KAAlC,CAoHE;;AApHF;AAAA;AAAA,kCAqHoB;AAChB,WAAA,MAAA,CAAA,KAAA,GAAoB,MAAM,CAAN,MAAA,CAAA,EAAA,EAAkB,KAAA,QAAA,CAAtC,KAAoB,CAApB;AACA,WAAA,MAAA,CAAA,IAAA,GAAmB,MAAM,CAAN,MAAA,CAAA,EAAA,EAAkB,KAAA,QAAA,CAArC,IAAmB,CAAnB;AACA,WAAA,UAAA;AAxH8B,KAAlC,CA2HE;;AA3HF;AAAA;AAAA,gDA4HmC;AAC/B,WAAA,OAAA,GAAe,QAAQ,CAAR,cAAA,CAAf,0BAAe,CAAf;AAEA;;AACA,UAAI,KAAJ,OAAA,EAAkB,OAAA,IAAA;AAElB,WAN+B,eAM/B,GAN+B,CAMR;;AAEvB,aAAO,OAAO,CAAC,KAAf,OAAc,CAAd;AACD;AArIH;AAAA;AAAA,kCAyIiB;AAAA,UADb,KACa,uEAFI,EAEJ;AAAA,UAFI,IAEJ;AAEb,UAAM,YAAY,GAAG,KAAA,MAAA,CAAY,IAAI,GAAA,MAAA,GAArC,OAAqB,CAArB;AAEA,aAAO,MAAM,CAAN,MAAA,CAAA,EAAA,EAAA,YAAA,EAAP,KAAO,CAAP;AA7I8B,KAAlC,CAmJE;AACA;;AApJF;AAAA;AAAA,sCAqJyB;AACrB;AACA,UAAI,OAAA,QAAA,KAAJ,WAAA,EAAqC;AAErC;;AACA,UAAM,OAAO,GAAG,KAAA,OAAA,IAAhB,EAAA;AAEA,WAAA,OAAA,GAAe,QAAQ,CAAR,aAAA,CAAf,OAAe,CAAf;AACA,WAAA,OAAA,CAAA,IAAA,GAAA,UAAA;AACA,WAAA,OAAA,CAAA,EAAA,GAAA,0BAAA;;AAEA,UAAI,OAAO,CAAX,QAAA,EAAsB;AACpB,aAAA,OAAA,CAAA,YAAA,CAAA,OAAA,EAAmC,OAAO,CAA1C,QAAA;AACD;;AAED,MAAA,QAAQ,CAAR,IAAA,CAAA,WAAA,CAA0B,KAA1B,OAAA;AACD;AArKH;AAAA;AAAA,gCAuKqB,IAvKrB,EAuKgC;AAAA;;AAC5B,WAAA,OAAA,GAAe,IAAI,CAAnB,KAAe,EAAf;;AACA,UAAI,KAAJ,WAAA,EAAsB;AACpB;AACA,QAAA,IAAI,CAAJ,SAAA,CAAe,YAAK;AAClB,UAAA,MAAA,CAAA,cAAA;AADF,SAAA;AAGA;AACD;;AAED,UAAM,WAAW,GAAG,OAAO,KAAA,OAAA,CAAP,UAAA,KAAA,UAAA,GAAgD,KAAA,OAAA,CAAA,UAAA,GAAhD,OAAA,GAApB,UAAA;AACA,UAAM,QAAQ,GAAG,IAAI,CAAJ,QAAA,CAAA,WAAA,KAAjB,EAAA;;AAEA,MAAA,IAAI,CAAJ,QAAA,CAAA,WAAA,IAA6B,YAAK;AAChC,QAAA,QAAQ,CAAR,KAAA,GAAiB,QAAQ,CAAR,KAAA,IAAjB,EAAA;AAEA,YAAM,iBAAiB,GAAG,QAAQ,CAAR,KAAA,CAAA,IAAA,CAAqB,UAAA,CAAD;AAAA,iBAAY,CAAC,CAAD,EAAA,KAA1D,0BAA8C;AAAA,SAApB,CAA1B;;AAEA,YAAI,CAAJ,iBAAA,EAAwB;AACtB,UAAA,QAAQ,CAAR,KAAA,CAAA,IAAA,CAAoB;AAClB,YAAA,OAAO,EAAE,MAAA,CADS,eAAA;AAElB,YAAA,IAAI,EAFc,UAAA;AAGlB,YAAA,EAAE,EAHgB,0BAAA;AAIlB,YAAA,KAAK,EAAE,CAAC,MAAA,CAAA,OAAA,IAAD,EAAA,EAAqB;AAJV,WAApB;AADF,SAAA,MAOO;AACL,UAAA,iBAAiB,CAAjB,OAAA,GAA4B,MAAA,CAA5B,eAAA;AACD;;AAED,eAAA,QAAA;AAhBF,OAAA;AAkBD;AAtMH;AAAA;AAAA,qCAwMwB;AAAA,iCACJ,KAAA,OAAA,CAAA,MAAA,CAAhB,SAAgB,CADI;AAAA,UACZ,GADY,wBACZ,GADY;;AAGpB,MAAA,GAAG,CAAC;AACF,QAAA,KAAK,EAAE,CAAC;AACN,UAAA,OAAO,EAAE,KADH,eAAA;AAEN,UAAA,IAAI,EAFE,UAAA;AAGN,UAAA,EAAE,EAHI,0BAAA;AAIN,UAAA,KAAK,EAAE,CAAC,KAAA,OAAA,IAAD,EAAA,EAAqB;AAJtB,SAAD;AADL,OAAD,CAAH;AAQD;AAnNH;AAAA;AAAA,4BAqNiB,UArNjB,EAqNmC;AAC/B,UAAM,OAAO,GAAG,KAAA,OAAA,IADe,EAC/B,CAD+B,CAE/B;;AACA,UAAM,KAAK,GAAG,OAAO,CAAP,QAAA,sBAA8B,OAAO,CAArC,QAAA,UAAd,EAAA;AACA,MAAA,UAAU,CAAV,IAAA,GAAkB,UAAU,CAAV,IAAA,IAAlB,EAAA;AACA,MAAA,UAAU,CAAV,IAAA,sEAA0E,KAA1E,cAAmF,KAAnF,eAAA;AACD;AA3NH;AAAA;AAAA,gCA6NmB;AAAA;;AACf;AACA,UAAI,OAAA,QAAA,KAAJ,WAAA,EAFe,OAAA,CAIf;AACA;;AACA,UAAI,KAAJ,WAAA,EAAsB,KAAA,WAAA,CANP,QAMO,GANP,CAQf;AACA;AACA;;AACA,WAAA,WAAA,GAAmB,IAAA,GAAA,CAAQ;AACzB,QAAA,IAAI,EAAE;AAAE,UAAA,MAAM,EAAE,KAAK;AAAf,SADmB;AAGzB,QAAA,KAAK,EAAE;AACL,UAAA,MAAM,EAAE;AACN,YAAA,SAAS,EADH,IAAA;AAEN,YAAA,IAAI,EAFE,IAAA;AAGN,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAA,CAAA,UAAA,EAAN;AAAA;AAHH;AADH;AAHkB,OAAR,CAAnB;AAWD;AAnPH;AAAA;AAAA,sBA2DE,GA3DF,EA2DsB;AAClB,UAAI,KAAJ,OAAA,EAAkB;AAChB,YAAI,KAAJ,WAAA,EAAsB;AACpB,eAAA,cAAA;AACD;;AACD;AACD;;AACD,WAAA,yBAAA,OAAqC,KAAA,OAAA,CAAA,SAAA,GAArC,GAAA;AACD;AAnEH;AAAA;AAAA,sBAqEE,GArEF,EAqEwB;AACpB,UAAM,OAAO,GAAG,KAAhB,MAAA;AAEA,WAAA,MAAA,GAHoB,GAGpB,CAHoB,CAIpB;AACA;;AACA,MAAA,OAAO,IAAP,IAAA,IAAmB,KAAnB,UAAmB,EAAnB;AACD,KA5EH;AAAA,wBA8EU;AACN,aAAO,OAAO,CAAC,KAAf,MAAc,CAAd;AA/E8B;AAAlC;AAAA;AAAA,wBAqPkB;AACd,UAAM,MAAM,GAAG,KAAA,IAAA,GAAA,MAAA,GAAf,OAAA;AAEA,aAAO,KAAA,MAAA,CAAP,MAAO,CAAP;AACD;AAzPH;AAAA;AAAA,wBA2PqB;AACjB,UAAM,KAAK,GAAG,KAAd,WAAA;AACA;;AACA,UAAM,OAAO,GAAG,KAAA,OAAA,IAAhB,EAAA;AACA,UAAA,GAAA;;AAEA,UAAI,OAAO,CAAP,UAAA,IAAJ,IAAA,EAAgC;AAC9B,QAAA,GAAG,GAAG,OAAO,CAAP,UAAA,CAAA,GAAA,CAAN,KAAM,CAAN;AACA;;AACA,YAAI,GAAG,IAAP,IAAA,EAAiB,OAAA,GAAA;AAClB;;AAED,MAAA,GAAG,GAAG,UAAU,CAAV,SAAA,CAAA,KAAA,EAA4B,OAAO,CAAzC,gBAAM,CAAN;;AAEA,UAAI,OAAO,CAAP,WAAA,IAAJ,IAAA,EAAiC;AAC/B,QAAA,GAAG,GAAG,OAAO,CAAP,WAAA,CAAN,GAAM,CAAN;AACD;;AAED,UAAI,OAAO,CAAP,UAAA,IAAJ,IAAA,EAAgC;AAC9B,QAAA,OAAO,CAAP,UAAA,CAAA,GAAA,CAAA,KAAA,EAAA,GAAA;AACD;;AAED,aAAA,GAAA;AACD;AAlRH;AAAA;AAAA,wBAoRiB;AACb;AACA,UAAM,KAAK,GAAG,KAAA,YAAA,IAAd,EAAA;AACA,aAAO,UAAU,CAAV,KAAA,CAAP,KAAO,CAAP;AAvR8B,KAAlC,CA0RE;AACA;;AA3RF;AAAA;AAAA,wBA4RyB;AACrB,aAAO,OAAO,KAAA,OAAA,CAAP,MAAA,KAAP,UAAA;AACD;AA9RH;;AAAA;AAAA,EAAM,OAAN;AACS,KAAA,CAAA,QAAA,GAAA,OAAA","sourcesContent":["/* eslint-disable no-multi-spaces */\n// Extensions\nimport { Service } from '../service'\n\n// Utilities\nimport * as ThemeUtils from './utils'\n\n// Types\nimport Vue from 'vue'\nimport {\n  VuetifyParsedTheme,\n  VuetifyThemes,\n  VuetifyThemeVariant,\n  Theme as ITheme,\n} from 'vuetify/types/services/theme'\n\nexport class Theme extends Service {\n  static property = 'theme'\n\n  public disabled = false\n\n  public options!: ITheme['options']\n\n  public styleEl?: HTMLStyleElement\n\n  public themes: VuetifyThemes = {\n    light: {\n      primary: '#1976D2',   // blue.darken2\n      secondary: '#424242', // grey.darken3\n      accent: '#82B1FF',    // blue.accent1\n      error: '#FF5252',     // red.accent2\n      info: '#2196F3',      // blue.base\n      success: '#4CAF50',   // green.base\n      warning: '#FB8C00',    // amber.base\n    },\n    dark: {\n      primary: '#2196F3',   // blue.base\n      secondary: '#424242', // grey.darken3\n      accent: '#FF4081',    // pink.accent-2\n      error: '#FF5252',     // red.accent2\n      info: '#2196F3',      // blue.base\n      success: '#4CAF50',   // green.base\n      warning: '#FB8C00',    // amber.base\n    },\n  }\n\n  public defaults: VuetifyThemes = this.themes\n\n  private isDark = null as boolean | null\n\n  private vueInstance = null as Vue | null\n\n  private vueMeta = null as any | null\n\n  constructor (options: Partial<ITheme> = {}) {\n    super()\n    if (options.disable) {\n      this.disabled = true\n\n      return\n    }\n\n    this.options = options.options!\n\n    this.dark = Boolean(options.dark)\n    const themes = options.themes || {} as never\n\n    this.themes = {\n      dark: this.fillVariant(themes.dark, true),\n      light: this.fillVariant(themes.light, false),\n    }\n  }\n\n  // When setting css, check for element\n  // and apply new values\n  set css (val: string) {\n    if (this.vueMeta) {\n      if (this.isVueMeta23) {\n        this.applyVueMeta23()\n      }\n      return\n    }\n    this.checkOrCreateStyleElement() && (this.styleEl!.innerHTML = val)\n  }\n\n  set dark (val: boolean) {\n    const oldDark = this.isDark\n\n    this.isDark = val\n    // Only apply theme after dark\n    // has already been set before\n    oldDark != null && this.applyTheme()\n  }\n\n  get dark () {\n    return Boolean(this.isDark)\n  }\n\n  // Apply current theme default\n  // only called on client side\n  public applyTheme (): void {\n    if (this.disabled) return this.clearCss()\n\n    this.css = this.generatedStyles\n  }\n\n  public clearCss (): void {\n    this.css = ''\n  }\n\n  // Initialize theme for SSR and SPA\n  // Attach to ssrContext head or\n  // apply new theme to document\n  public init (root: Vue, ssrContext?: any): void {\n    if (this.disabled) return\n\n    /* istanbul ignore else */\n    if ((root as any).$meta) {\n      this.initVueMeta(root)\n    } else if (ssrContext) {\n      this.initSSR(ssrContext)\n    }\n\n    this.initTheme()\n  }\n\n  // Allows for you to set target theme\n  public setTheme (theme: 'light' | 'dark', value: object) {\n    this.themes[theme] = Object.assign(this.themes[theme], value)\n    this.applyTheme()\n  }\n\n  // Reset theme defaults\n  public resetThemes () {\n    this.themes.light = Object.assign({}, this.defaults.light)\n    this.themes.dark = Object.assign({}, this.defaults.dark)\n    this.applyTheme()\n  }\n\n  // Check for existence of style element\n  private checkOrCreateStyleElement (): boolean {\n    this.styleEl = document.getElementById('vuetify-theme-stylesheet') as HTMLStyleElement\n\n    /* istanbul ignore next */\n    if (this.styleEl) return true\n\n    this.genStyleElement() // If doesn't have it, create it\n\n    return Boolean(this.styleEl)\n  }\n\n  private fillVariant (\n    theme: Partial<VuetifyThemeVariant> = {},\n    dark: boolean\n  ): VuetifyThemeVariant {\n    const defaultTheme = this.themes[dark ? 'dark' : 'light']\n\n    return Object.assign({},\n      defaultTheme,\n      theme\n    )\n  }\n\n  // Generate the style element\n  // if applicable\n  private genStyleElement (): void {\n    /* istanbul ignore if */\n    if (typeof document === 'undefined') return\n\n    /* istanbul ignore next */\n    const options = this.options || {}\n\n    this.styleEl = document.createElement('style')\n    this.styleEl.type = 'text/css'\n    this.styleEl.id = 'vuetify-theme-stylesheet'\n\n    if (options.cspNonce) {\n      this.styleEl.setAttribute('nonce', options.cspNonce)\n    }\n\n    document.head.appendChild(this.styleEl)\n  }\n\n  private initVueMeta (root: any) {\n    this.vueMeta = root.$meta()\n    if (this.isVueMeta23) {\n      // vue-meta needs to apply after mounted()\n      root.$nextTick(() => {\n        this.applyVueMeta23()\n      })\n      return\n    }\n\n    const metaKeyName = typeof this.vueMeta.getOptions === 'function' ? this.vueMeta.getOptions().keyName : 'metaInfo'\n    const metaInfo = root.$options[metaKeyName] || {}\n\n    root.$options[metaKeyName] = () => {\n      metaInfo.style = metaInfo.style || []\n\n      const vuetifyStylesheet = metaInfo.style.find((s: any) => s.id === 'vuetify-theme-stylesheet')\n\n      if (!vuetifyStylesheet) {\n        metaInfo.style.push({\n          cssText: this.generatedStyles,\n          type: 'text/css',\n          id: 'vuetify-theme-stylesheet',\n          nonce: (this.options || {}).cspNonce,\n        })\n      } else {\n        vuetifyStylesheet.cssText = this.generatedStyles\n      }\n\n      return metaInfo\n    }\n  }\n\n  private applyVueMeta23 () {\n    const { set } = this.vueMeta.addApp('vuetify')\n\n    set({\n      style: [{\n        cssText: this.generatedStyles,\n        type: 'text/css',\n        id: 'vuetify-theme-stylesheet',\n        nonce: (this.options || {}).cspNonce,\n      }],\n    })\n  }\n\n  private initSSR (ssrContext?: any) {\n    const options = this.options || {}\n    // SSR\n    const nonce = options.cspNonce ? ` nonce=\"${options.cspNonce}\"` : ''\n    ssrContext.head = ssrContext.head || ''\n    ssrContext.head += `<style type=\"text/css\" id=\"vuetify-theme-stylesheet\"${nonce}>${this.generatedStyles}</style>`\n  }\n\n  private initTheme () {\n    // Only watch for reactivity on client side\n    if (typeof document === 'undefined') return\n\n    // If we get here somehow, ensure\n    // existing instance is removed\n    if (this.vueInstance) this.vueInstance.$destroy()\n\n    // Use Vue instance to track reactivity\n    // TODO: Update to use RFC if merged\n    // https://github.com/vuejs/rfcs/blob/advanced-reactivity-api/active-rfcs/0000-advanced-reactivity-api.md\n    this.vueInstance = new Vue({\n      data: { themes: this.themes },\n\n      watch: {\n        themes: {\n          immediate: true,\n          deep: true,\n          handler: () => this.applyTheme(),\n        },\n      },\n    })\n  }\n\n  get currentTheme () {\n    const target = this.dark ? 'dark' : 'light'\n\n    return this.themes[target]\n  }\n\n  get generatedStyles (): string {\n    const theme = this.parsedTheme\n    /* istanbul ignore next */\n    const options = this.options || {}\n    let css\n\n    if (options.themeCache != null) {\n      css = options.themeCache.get(theme)\n      /* istanbul ignore if */\n      if (css != null) return css\n    }\n\n    css = ThemeUtils.genStyles(theme, options.customProperties)\n\n    if (options.minifyTheme != null) {\n      css = options.minifyTheme(css)\n    }\n\n    if (options.themeCache != null) {\n      options.themeCache.set(theme, css)\n    }\n\n    return css\n  }\n\n  get parsedTheme (): VuetifyParsedTheme {\n    /* istanbul ignore next */\n    const theme = this.currentTheme || {}\n    return ThemeUtils.parse(theme)\n  }\n\n  // Is using v2.3 of vue-meta\n  // https://github.com/nuxt/vue-meta/releases/tag/v2.3.0\n  private get isVueMeta23 (): boolean {\n    return typeof this.vueMeta.addApp === 'function'\n  }\n}\n"],"sourceRoot":""}]}